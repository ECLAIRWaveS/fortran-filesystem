name: oneapi-linux

env:
  CC: icx
  CXX: icpx
  FC: ifx
  LINUX_BASEKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18852/l_BaseKit_p_2022.3.0.8767_offline.sh
  LINUX_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/18856/l_HPCKit_p_2022.3.0.8751_offline.sh
  LINUX_CPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic
  LINUX_FORTRAN_COMPONENTS: intel-oneapi-compiler-fortran
# https://github.com/oneapi-src/oneapi-ci/blob/master/.github/workflows/build_all.yml


on:
  push:
    paths:
      - "**/*.cpp"
      - "**.f90"
      - "**.F90"
      - "**.cmake"
      - "**/CMakeLists.txt"
      - ".github/workflows/oneapi-linux.yml"
      - "!cray.cmake"
      - "!concepts/"

jobs:

  linux-intel-oneapi:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        cpp: [true, false]

    steps:
    - uses: actions/checkout@v3

    - name: cache install oneAPI
      id: cache-install
      uses: actions/cache@v3
      with:
        path: |
          /opt/intel/oneapi
        key: install-${{ env.LINUX_HPCKIT_URL }}-${{ env.LINUX_CPP_COMPONENTS }}-${{ env.LINUX_FORTRAN_COMPONENTS }}-compiler

    - name: non-cache install oneAPI
      if: steps.cache-install.outputs.cache-hit != 'true'
      timeout-minutes: 5
      run: |
        .github/workflows/oneapi_setup_apt_repo_linux.sh
        sudo apt install ${{ env.LINUX_CPP_COMPONENTS }} ${{ env.LINUX_FORTRAN_COMPONENTS }}

    - name: oneAPI env vars
      run: |
        source /opt/intel/oneapi/setvars.sh
        printenv >> $GITHUB_ENV

    - name: install Ninja
      run: sudo apt install ninja-build
# install ninja needs to be own step as not cached by design

    - name: Configure CMake
      timeout-minutes: 1
      run: >-
        cmake --preset multi --install-prefix=${{ runner.temp }}
        -Dcpp:BOOL=${{ matrix.cpp }}
      env:
        CFLAGS: -Werror
        CXXFLAGS: -Werror
        FCFLAGS: -warn errors


# bug in CMake 3.24--this flag triggers Fortran errors as not supported
#    -DCMAKE_COMPILE_WARNING_AS_ERROR:BOOL=true

    - name: print config log
      if: ${{ failure() }}
      run: cat build/CMakeFiles/CMakeError.log

    - name: Release build
      run: cmake --build --preset release
    - name: Release unit test
      run: ctest --preset release -V -E Find

    - name: debug build
      run: cmake --build --preset debug
    - name: debug unit test
      run: ctest --preset debug -V

    - name: install package
      run: cmake --install build

    - name: example config
      run: cmake -B example/build -S example/ -DCMAKE_PREFIX_PATH=${{ runner.temp }}

    - name: example build
      run: cmake --build example/build --parallel || cmake --build example/build -v

    - name: example test
      run: ctest --test-dir example/build -V

# NOTE: as with any C++ / Fortran program with Intel compiler,
# need to have GCC environment carefully set
# so that underlying libstdc++ is compatible.
    # - name: shared config
    #   run: cmake -B builds -DBUILD_SHARED_LIBS:BOOL=on

    # - name: shared build
    #   run: cmake --build builds || cmake --build builds -v

    # - name: shared test
    #   run: ctest --test-dir builds -V

    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: .github/workflows/oneapi_cache_exclude_linux.sh
