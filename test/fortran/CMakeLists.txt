set_property(DIRECTORY PROPERTY LABELS fortran)

if(CMAKE_Fortran_COMPILER_ID STREQUAL "GNU")
  add_compile_options($<$<COMPILE_LANGUAGE:Fortran>:-Wno-maybe-uninitialized>)
endif()

foreach(t IN ITEMS canonical core exe expanduser find mkdtemp relative reserved same)
  add_executable(test_${t} test_${t}.f90)
  target_link_libraries(test_${t} PRIVATE ffilesystem)
  add_test(NAME Fortran_${t} COMMAND test_${t})
endforeach()

set_property(TEST Fortran_core PROPERTY FIXTURES_SETUP core_fxt)

if(HAVE_CXX_FILESYSTEM)
  set_property(TEST Fortran_relative PROPERTY PASS_REGULAR_EXPRESSION "OK: relative_to full")
  set_property(TEST Fortran_canonical PROPERTY PASS_REGULAR_EXPRESSION "OK: canonical full")
endif()

# --- shaky tests
set(shaky_tests Fortran_filesize Fortran_symlink)

foreach(t IN ITEMS filesize)
  add_executable(test_${t} test_${t}.f90)
  target_link_libraries(test_${t} PRIVATE ffilesystem)
  add_test(NAME Fortran_${t} COMMAND ${CMAKE_COMMAND} -E env $<TARGET_FILE:test_${t}>)
endforeach()

set(test_symlink_dir ${CMAKE_CURRENT_BINARY_DIR}/symlink_test_dir)
message(VERBOSE "Creating test directory ${test_symlink_dir}")
file(MAKE_DIRECTORY ${test_symlink_dir})
file(GENERATE OUTPUT ${test_symlink_dir}/cmake-test.txt CONTENT "I was generated by CMake")
set(test_symlink_file ${test_symlink_dir}/cmake-test.txt.link)
file(CREATE_LINK ${test_symlink_dir}/cmake-test.txt ${test_symlink_file} SYMBOLIC)
message(VERBOSE "CMake test link file ${test_symlink_file}")
add_executable(fortran_symlink test_symlink.f90)
target_link_libraries(fortran_symlink PRIVATE ffilesystem)
add_test(NAME Fortran_symlink COMMAND ${CMAKE_COMMAND} -E env $<TARGET_FILE:fortran_symlink> ${test_symlink_file})

if(ffilesystem_shaky)
  set_property(TEST ${shaky_tests} PROPERTY SKIP_REGULAR_EXPRESSION "(uncaught exception|[bB]us error|SIGABRT)")
  set_property(TEST ${shaky_tests} PROPERTY LABELS "shaky")
endif()



# --- get_homedir, exists

add_executable(test_env test_env.f90)
target_link_libraries(test_env PRIVATE ffilesystem)
add_test(NAME FortranHomedirEnv COMMAND test_env)

if(CMAKE_VERSION VERSION_GREATER_EQUAL 3.22)
  add_test(NAME FortranHomedirNoEnv COMMAND test_env)
  set_property(TEST FortranHomedirNoEnv PROPERTY ENVIRONMENT_MODIFICATION "HOME=unset:;USERPROFILE=unset:")
  set_property(TEST FortranHomedirNoEnv PROPERTY DISABLED $<BOOL:$ENV{CI}>)
endif()

# --- binpath
add_executable(test_binpath_fortran test_binpath.f90)
target_link_libraries(test_binpath_fortran PRIVATE ffilesystem)
add_test(NAME Fortran_binpath
COMMAND test_binpath_fortran
  $<AND:$<BOOL:${BUILD_SHARED_LIBS}>,$<OR:$<BOOL:${WIN32}>,$<BOOL:${CYGWIN}>,$<BOOL:${HAVE_DLADDR}>>>
  $<TARGET_FILE_BASE_NAME:test_binpath_fortran>
  $<TARGET_FILE_NAME:ffilesystem>
)

# --- fileop
add_executable(test_fileop test_fileop.f90)
target_link_libraries(test_fileop PRIVATE ffilesystem)

add_test(NAME Fortran_fileop COMMAND test_fileop ${CMAKE_CURRENT_SOURCE_DIR})
set_property(TEST Fortran_fileop PROPERTY WORKING_DIRECTORY $<TARGET_FILE_DIR:test_fileop>)
set_property(TEST Fortran_fileop PROPERTY FIXTURES_SETUP ops_fxt)
# workdir avoids test state being shared between tests

# --- props

set_property(TEST Fortran_find PROPERTY FIXTURES_REQUIRED ops_fxt)

set_property(TEST Fortran_relative Fortran_canonical Fortran_filesize PROPERTY FIXTURES_REQUIRED core_fxt)

get_property(test_targets DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY BUILDSYSTEM_TARGETS)
# Intel needs linker_language fortran else error "undefined reference to `main'"
set_property(TARGET ${test_targets} PROPERTY LINKER_LANGUAGE Fortran)

get_property(test_names DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY TESTS)
set_property(TEST ${test_names} PROPERTY RUN_SERIAL true)
# tests run much faster in serial, especially on Windows

# --- Windows shared DLLs
if(BUILD_SHARED_LIBS AND (CYGWIN OR WIN32) AND CMAKE_VERSION VERSION_GREATER_EQUAL 3.22)
  set_property(TEST ${test_names} PROPERTY ENVIRONMENT_MODIFICATION "PATH=path_list_append:$<TARGET_FILE_DIR:ffilesystem>")
endif()
