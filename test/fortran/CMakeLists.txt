set_property(DIRECTORY PROPERTY LABELS "fortran")

if(ffilesystem_cli)
add_test(NAME Fortran_CLI_Cpp COMMAND filesystem_cli cpp)
if(ffilesystem_cpp)
  set_property(TEST Fortran_CLI_Cpp PROPERTY PASS_REGULAR_EXPRESSION "^T")
else()
  set_property(TEST Fortran_CLI_Cpp PROPERTY PASS_REGULAR_EXPRESSION "^F")
endif()
endif()

add_executable(test_Fortran_windows test_windows.f90)
target_link_libraries(test_Fortran_windows PRIVATE ffilesystem)
add_test(NAME Fortran_Ffilesystem_windows COMMAND test_Fortran_windows)
set_property(TEST Fortran_Ffilesystem_windows PROPERTY DISABLED $<OR:$<NOT:$<BOOL:${WIN32}>>,$<NOT:$<BOOL:${HAVE_CXX_FILESYSTEM}>>>)

add_compile_options($<$<COMPILE_LANG_AND_ID:Fortran,GNU>:-Wno-maybe-uninitialized>)

foreach(t IN ITEMS canonical core expanduser find mkdtemp relative reserved resolve utf8)
  add_executable(test_${t} test_${t}.f90)
  target_link_libraries(test_${t} PRIVATE ffilesystem)
  add_test(NAME Fortran_${t} COMMAND test_${t})
endforeach()

set_property(TEST Fortran_core PROPERTY FIXTURES_SETUP core_fxt)

if(HAVE_CXX_FILESYSTEM)
  set_property(TEST Fortran_relative PROPERTY PASS_REGULAR_EXPRESSION "OK: relative_to full")
  set_property(TEST Fortran_canonical PROPERTY PASS_REGULAR_EXPRESSION "OK: canonical full")
endif()

# --- shaky tests

add_executable(fortran_same test_same.f90)
target_link_libraries(fortran_same PRIVATE ffilesystem)
add_test(NAME Fortran_same COMMAND fortran_same $<BOOL:${ffilesystem_shaky}>)

add_executable(fortran_filesize test_filesize.f90)
target_link_libraries(fortran_filesize PRIVATE ffilesystem)
add_test(NAME Fortran_filesize
COMMAND fortran_filesize
  ${CMAKE_CURRENT_BINARY_DIR}/test_filesize.dat
  $<BOOL:${ffilesystem_shaky}>
)

set(test_symlink_dir ${CMAKE_CURRENT_BINARY_DIR}/symlink_test_dir)
message(VERBOSE "Creating test directory ${test_symlink_dir}")
file(MAKE_DIRECTORY ${test_symlink_dir})
file(GENERATE OUTPUT ${test_symlink_dir}/cmake-test.txt CONTENT "I was generated by CMake")
set(test_symlink_file ${test_symlink_dir}/cmake-test.txt.link)
file(CREATE_LINK ${test_symlink_dir}/cmake-test.txt ${test_symlink_file} SYMBOLIC)
message(VERBOSE "CMake test link file ${test_symlink_file}")
add_executable(fortran_symlink test_symlink.f90)
target_link_libraries(fortran_symlink PRIVATE ffilesystem)
add_test(NAME Fortran_symlink
COMMAND fortran_symlink ${test_symlink_file} $<BOOL:${ffilesystem_shaky}>)

# if(ffilesystem_shaky)
#   set_property(TEST ${shaky_tests} PROPERTY SKIP_REGULAR_EXPRESSION "(uncaught exception|[bB]us error|SIGABRT)")
#   set_property(TEST ${shaky_tests} PROPERTY LABELS "shaky")
# endif()

# --- permissions

add_executable(test_permissions_fortran test_permissions.f90)
target_link_libraries(test_permissions_fortran PRIVATE ffilesystem)
add_test(NAME Fortran_permissions COMMAND test_permissions_fortran)
set_property(TEST Fortran_permissions PROPERTY SKIP_RETURN_CODE 77)

# --- executable

add_executable(test_exe_fortran test_exe.f90)
target_link_libraries(test_exe_fortran PRIVATE ffilesystem)
add_test(NAME Fortran_exe COMMAND test_exe_fortran)
set_property(TEST Fortran_exe PROPERTY SKIP_RETURN_CODE 77)
set_property(TEST Fortran_exe PROPERTY WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})

# --- get_homedir, exists

add_executable(test_env test_env.f90)
target_link_libraries(test_env PRIVATE ffilesystem)
add_test(NAME FortranHomedirEnv COMMAND test_env)

if(CMAKE_VERSION VERSION_GREATER_EQUAL 3.22)
  add_test(NAME FortranHomedirNoEnv COMMAND test_env)
  set_property(TEST FortranHomedirNoEnv PROPERTY ENVIRONMENT_MODIFICATION "HOME=unset:;USERPROFILE=unset:;TEMP=unset:;TMPDIR=unset:")
  if(DEFINED ENV{CI} OR (WIN32 AND NOT HAVE_CXX_FILESYSTEM))
    set_property(TEST FortranHomedirNoEnv PROPERTY DISABLED true)
  endif()
endif()

# --- binpath

if(NOT BSD)
add_executable(test_exepath_fortran test_exepath.f90)
target_link_libraries(test_exepath_fortran PRIVATE ffilesystem)
add_test(NAME Fortran_exepath
COMMAND test_exepath_fortran $<TARGET_FILE_BASE_NAME:test_exepath_fortran>
)
endif()

add_executable(test_libpath_fortran test_libpath.f90)
target_link_libraries(test_libpath_fortran PRIVATE ffilesystem)
add_test(NAME Fortran_libpath
COMMAND test_libpath_fortran
  $<AND:$<BOOL:${BUILD_SHARED_LIBS}>,$<OR:$<BOOL:${WIN32}>,$<BOOL:${CYGWIN}>,$<BOOL:${HAVE_DLADDR}>>>
  $<TARGET_FILE_NAME:ffilesystem>
)
set_property(TEST Fortran_libpath PROPERTY DISABLED $<NOT:$<BOOL:${HAVE_CXX_FILESYSTEM}>>)

# --- fileop
add_executable(test_fileop test_fileop.f90)
target_link_libraries(test_fileop PRIVATE ffilesystem)

add_test(NAME Fortran_fileop COMMAND test_fileop ${CMAKE_CURRENT_SOURCE_DIR})
set_property(TEST Fortran_fileop PROPERTY WORKING_DIRECTORY $<TARGET_FILE_DIR:test_fileop>)
set_property(TEST Fortran_fileop PROPERTY FIXTURES_SETUP ops_fxt)
# workdir avoids test state being shared between tests

add_executable(test_mkdir test_mkdir.f90)
target_link_libraries(test_mkdir PRIVATE ffilesystem)
add_test(NAME Fortran_mkdir COMMAND test_mkdir)
set_property(TEST Fortran_mkdir PROPERTY DISABLED $<AND:$<NOT:$<BOOL:${HAVE_CXX_FILESYSTEM}>>,$<BOOL:${WIN32}>>)
# --- props

set_property(
TEST Fortran_fileop Fortran_permissions Fortran_exepath Fortran_libpath Fortran_reserved Fortran_same Fortran_mkdtemp Fortran_symlink
PROPERTY SKIP_REGULAR_EXPRESSION "not implemented;not available"
)

set_property(TEST Fortran_relative Fortran_canonical Fortran_filesize PROPERTY FIXTURES_REQUIRED core_fxt)

get_property(test_targets DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY BUILDSYSTEM_TARGETS)
# Intel needs linker_language Fortran else error "undefined reference to `main'"
set_property(TARGET ${test_targets} PROPERTY LINKER_LANGUAGE Fortran)

get_property(test_names DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY TESTS)
set_property(TEST ${test_names} PROPERTY RUN_SERIAL true)
# tests run much faster in serial, especially on Windows

# --- Windows shared DLLs
if(BUILD_SHARED_LIBS AND (CYGWIN OR WIN32) AND CMAKE_VERSION VERSION_GREATER_EQUAL 3.22)
  set_property(TEST ${test_names} PROPERTY ENVIRONMENT_MODIFICATION "PATH=path_list_append:$<TARGET_FILE_DIR:ffilesystem>")
endif()
